---
alwaysApply: true
---

# Cursor ルール: t-wada 流 TDD 実践ガイド

## 目的

このプロジェクトでは、t-wada 氏の提唱する TDD（テスト駆動開発）サイクル（Red→Green→Refactor）を徹底し、品質と開発効率を高めます。

## 基本ルール

1. **必ずテストから書き始める（Red）**

   - 新機能・修正は、まず失敗するテストを書くことから始める。
   - テストは`src/`配下の該当ディレクトリに`*.test.ts(x)`として配置。

2. **最小限の実装でテストを通す（Green）**

   - テストが通る最小限の実装のみを追加。
   - 余計な実装やリファクタはこの段階では行わない。

3. **リファクタリング（Refactor）**

   - テストがグリーンの状態を維持しつつ、実装・テスト両方のリファクタを行う。
   - コードの重複除去、命名改善、設計の見直しなど。

4. **テストは必ず自動化（Vitest）**

   - テストは`npm run test:watch`や`npm run test`で自動実行。
   - Storybook 連携テストは`npm run test:storybook`で実行。

5. **テストの粒度**

   - ユニットテストを基本とし、必要に応じて結合テスト・E2E テストも追加。
   - UI コンポーネントは`@testing-library/react`で DOM 検証。

6. **CI/CD 連携**
   - プルリクエスト時は必ずテストがグリーンであること。
   - テストが失敗した場合はマージ禁止。

## 推奨ワークフロー

1. `npm run test:watch`でテスト監視を起動
2. テスト → 実装 → リファクタのサイクルを小さく回す
3. コミット前に`npm run test:all`で全テスト確認
